import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import os
from sklearn.ensemble import RandomForestRegressor

# ------------------- User Inputs -------------------
input_file = r"C:\Users\rkpha\Desktop\cardekho\app\preprocessed_dataset.csv"  # Preprocessed dataset path
output_folder = r"C:\Users\rkpha\Desktop\cardekho\eda"  # Folder to save charts

# Create output folder if not exists
os.makedirs(output_folder, exist_ok=True)

# ------------------- Load Data -------------------
df = pd.read_csv(input_file)
print("✅ Data loaded successfully.")

# ------------------- 1. Descriptive Statistics -------------------
desc_stats = df.describe(include='all')
desc_stats.to_csv(os.path.join(output_folder, 'descriptive_statistics.csv'))
print("✅ Descriptive statistics saved!")

# ------------------- 2. Histograms -------------------
numerical_cols = ['km', 'modelyear', 'ownerno', 'prize']

for col in numerical_cols:
    plt.figure(figsize=(8,5))
    sns.histplot(df[col], kde=True, bins=30)
    plt.title(f'Distribution of {col}')
    plt.xlabel(col)
    plt.ylabel('Frequency')
    plt.savefig(os.path.join(output_folder, f'{col}_histogram.png'))
    plt.close()
print("✅ Histograms saved!")

# ------------------- 3. Boxplots -------------------
for col in numerical_cols:
    plt.figure(figsize=(8,5))
    sns.boxplot(x=df[col])
    plt.title(f'Boxplot of {col}')
    plt.xlabel(col)
    plt.savefig(os.path.join(output_folder, f'{col}_boxplot.png'))
    plt.close()
print("✅ Boxplots saved!")

# ------------------- 4. Scatter Plots (Feature vs Prize) -------------------
features_to_scatter = ['km', 'modelyear', 'ownerno']

for feature in features_to_scatter:
    plt.figure(figsize=(8,5))
    sns.scatterplot(x=df[feature], y=df['prize'])
    plt.title(f'{feature} vs Prize')
    plt.xlabel(feature)
    plt.ylabel('Prize (Lakhs)')
    plt.savefig(os.path.join(output_folder, f'{feature}_vs_prize_scatter.png'))
    plt.close()
print("✅ Scatter plots saved!")

# ------------------- 5. Correlation Heatmap -------------------
plt.figure(figsize=(12,10))
correlation = df.corr()
sns.heatmap(correlation, cmap='coolwarm', annot=False)
plt.title('Correlation Heatmap')
plt.savefig(os.path.join(output_folder, 'correlation_heatmap.png'))
plt.close()
print("✅ Correlation heatmap saved!")

# ------------------- 6. Feature Importance -------------------
X = df.drop('prize', axis=1)
y = df['prize']

rf = RandomForestRegressor()
rf.fit(X, y)

feature_importance = pd.DataFrame({'feature': X.columns, 'importance': rf.feature_importances_})
feature_importance = feature_importance.sort_values(by='importance', ascending=False)

feature_importance.to_csv(os.path.join(output_folder, 'feature_importance.csv'), index=False)

plt.figure(figsize=(10,8))
sns.barplot(y='feature', x='importance', data=feature_importance.head(20))
plt.title('Top 20 Important Features')
plt.tight_layout()
plt.savefig(os.path.join(output_folder, 'top20_feature_importance.png'))
plt.close()
print("✅ Feature importance plot saved!")

print("✅✅✅ EDA Completed! All files saved in:", output_folder)
